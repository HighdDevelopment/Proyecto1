/*
Gramatica para el Robot:
Autor: Alejandro Arango
Modificado por: Silvia Takahashi
Modificado por: Juan Pablo Morales.
Agregadas producciones para manejar globos
Modificado por Silvia Takahashi


 **/


options 
{
  
	LOOKAHEAD=1; 
	IGNORE_CASE=true;
	STATIC = false;
	
}
   

PARSER_BEGIN(Robot)

package uniandes.lym.robot.control;

import uniandes.lym.robot.kernel.*;
import uniandes.lym.robot.view.Console;
 
import java.awt.Point;
import java.io.*;
import java.util.Vector;
import java.util.LinkedList;
import java.util.ArrayList;
import java.util.*;

@SuppressWarnings("serial")
public class Robot 
{
  	private HashMap <String,Integer > variables = new HashMap<String,Integer >();
	private HashMap <String,ArrayList > procedures = new HashMap<String,ArrayList >();

	
	


	private RobotWorldDec world;
	
	
	void setWorld(RobotWorld w) {
		world = (RobotWorldDec) w;	
	}

	String salida=new String();
}

PARSER_END(Robot)

SKIP:
{
	" "
	|	"\r"
	|	"\t"
	|   "\n"
}

TOKEN: /* Nombres de Comandos */
{

			<MOVE:  "move">
		| 	<RIGHT: "right">
		| 	<PUT: "Put">
		| 	<PICK: "Pick">
		|   < POP: "Pop" >
        |   < HOP:  "Hop" >
		|   <GO: "Go" >
		|   <ROBOT_R: "ROBOT_R" >
		|   <VARS: "VARS" >
		|   <PROCS: "PROCS" >
		

}

TOKEN:

{
		    <ASSIGNTO: "assignTo" >
		|   <GOTO: "goto" >
		|   <TURN: "turn" >
		|   <FACE: "face" >
		|   <MOVETOTHE: "moveToThe" >
		|   <MOVEINDIR: "moveInDir" >
		|   <JUMPTOTHE: "jumpToThe" >			
		|   <JUMPINDIR: "jumpInDir" >
		|   <NOP: "nop" >		
}


TOKEN:
{
		    <FACING: "facing" >
		|   <CANPUT: "canPut" >
		|   <CANPICK: "canPick" >
		|   <CANMOVEINDIR: "canMoveInDir" >
		|   <CANJUMPINDIR: "canJumpInDir" >
		|   <CANMOVETOTHE: "canMoveToThe" >
		|   <CANJUMPTOTHE: "canJumpToThe" >
		|   <NOT: "not" >			
}

TOKEN:
{
		    <IF: "if" >
		|   <THEN: "then" >
		|   <ELSE: "else" >
		|   <WHILE: "while" >
		|   <DO: "do" >
		|   <REPEAT: "repeat" >
		
}
  
TOKEN:
{
		<BALLOONS:  "BALLOONS" >
		|	<CHIPS:     "CHIPS"  >	

}
TOKEN:

{

          < LEFT: "left" >
        | < AROUND: "around" >
        | < FRONT : "front" >
        | < BACK : "back" >
        | < NORTH: "north" >
        | < SOUTH: "south" >
        | < EAST: "east" >
        | < WEST: "west" >
        
}

TOKEN :
{
		<NUM: (<DIGIT>)+ >
		|  	<#DIGIT: ["0"-"9"] >
		| <WORD : (<  LETTER >)+ >
		| <#LETTER : [ "a"-"z" ] | [ "A"-"Z" ]>
        
}



void inicio():{
  }{
	<ROBOT_R> (variables())? <PROCS> (Procesos())*

  }

	//boolean command(uniandes.lym.robot.view.Console sistema) :
	boolean command(Console sistema):
	{	
		
		int x,y;
		salida=new String();	
	}

	
	{
	  
		(
		  (
		   inicio()
		 )

		{
		    try {
	    			 Thread.sleep(900);
	    	    } catch (InterruptedException e) {
	    			        System.err.format("IOException: %s%n", e);
	    		    }
	    			 
			sistema.printOutput(salida);
			return true;
		})+

    	| <EOF> {return false;} 
	}

	void put() :
	{
		int f=1;	
	}
	{
		( <CHIPS>    "," f=num() {world.putChips(f); salida = "Command:  Put Chips"; })
		|  	  ( <BALLOONS>   "," f=num() {world.putBalloons(f); salida = "Command:  Put Balloons";})	 

	}

	void get() :
	{
		int f=1;	
	}
	{
		( <CHIPS>   "," f=num() {world.pickChips(f);salida = "Command:  Pick chips";})
		|  	  ( <BALLOONS>   "," f=num() {world.grabBalloons(f);salida="Command:  Pick balloons";})	 

	}


	void variables(): 
		{
	Token name;
		  }
		{
		< VARS > ( LOOKAHEAD(2) name = < WORD > "," {variables.put(name.toString(),0); })*(name = < WORD >  {variables.put(name.toString(),0); })";"
		}

	void Procesos(): {
	  Token name,para,para2;}
	 {
		  
		  name = < WORD > "["
		  "|"( LOOKAHEAD(2)  para=< WORD >  "," )* (para2=< WORD > )? "|"
			(			  bloques()
			  )*
		"]"

	  }

	void bloques(): {
	  int x,y;
	  Token t;
	  }
		{(
		LOOKAHEAD(2) < ASSIGNTO > x=num()  
   	   | t=< MOVE > ":" x = num() {world.moveForward(x,false);salida = "Command: Moveforward ";}  
	   | t=<GOTO> ":" x = num() "," y= num() {world.setPostion(x,y); salida="Command: GoTo";}
	   | t=<FACE> ":" (t =< NORTH >|t =< SOUTH >|t =< EAST >|t =< WEST >)
	   | t=<PUT> ":" put()
	   | t=<PICK> ":" get()

   	     )";"

	  }
	






	
	/**
	 * Unsigned decimal numbera
	 * @return the corresponding value of the string
	 * @error  corresponding value is too large
	 */
	int num() throws Error:
	{	
		int total=1;
	}
	{
		<NUM>
		{
			try 
			{
				total = Integer.parseInt(token.image);
			} 
			catch (NumberFormatException ee) 
			{
				throw new Error("Number out of bounds: "+token.image+" !!");
			}
			return total;
		}
	}

	